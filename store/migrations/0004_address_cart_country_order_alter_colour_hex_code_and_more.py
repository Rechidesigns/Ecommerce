# Generated by Django 4.2.1 on 2023-05-17 17:52

import core.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
        ("store", "0003_alter_category_name_alter_colour_name_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "first_name",
                    models.CharField(
                        help_text="This holds the first name of the customer",
                        max_length=255,
                        verbose_name="First Name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="This holds the name of the customer",
                        max_length=255,
                        verbose_name="Last Name",
                    ),
                ),
                (
                    "street_address",
                    models.CharField(
                        help_text="This holds the street aaddress of the customer",
                        max_length=255,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "second_street_address",
                    models.CharField(
                        blank=True,
                        help_text="This holds the name of the second address of the customer",
                        max_length=255,
                        null=True,
                        verbose_name="Second Street Address",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="This holds the name of the city of the customer",
                        max_length=255,
                        verbose_name="City",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        help_text="This holds the name of the State of the customer",
                        max_length=255,
                        verbose_name="State",
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        help_text="This holds the zip code the customers address",
                        max_length=10,
                        verbose_name="Zip Code",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="This holds the phone number of the customer",
                        max_length=20,
                        validators=[core.validators.validate_phone_number],
                        verbose_name="Phone Number",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="This holds the cutomer details that owns the cart",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to="core.customer",
                        verbose_name="Customer Detail",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_date",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="This holds the name of the Country",
                        max_length=255,
                        verbose_name="Country Name",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="This holds the county code",
                        max_length=10,
                        verbose_name="Code",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Countries",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "transaction_ref",
                    models.CharField(
                        help_text="This holds the Transaction reference number of the order placed by the customer",
                        max_length=32,
                        unique=True,
                        verbose_name="Transaction Reference",
                    ),
                ),
                (
                    "placed_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="This holds the time and date that the customer placed the order",
                        verbose_name="Placed At",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="This holds the total price of the products orderd by the customer",
                        max_digits=6,
                        null=True,
                        verbose_name="Total Price",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[("P", "Pending"), ("C", "Complete"), ("F", "Failed")],
                        default="P",
                        help_text="This holds the status of the payment of the order",
                        max_length=2,
                        verbose_name="Payment Status",
                    ),
                ),
                (
                    "shipping_status",
                    models.CharField(
                        choices=[("P", "Pending"), ("PR", "Shipping")],
                        default="P",
                        help_text="This holds the Shipping status of the order placed by the customer",
                        max_length=2,
                        verbose_name="Shipping Status",
                    ),
                ),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        help_text="This holds the address of the customer that placed the order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders_address",
                        to="store.address",
                        verbose_name="Order Address",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="This holds the CUSTOMER's order details",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core.customer",
                        verbose_name="Customer Order",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_date",),
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="colour",
            name="hex_code",
            field=models.CharField(
                help_text="This holds the hex color code of the colour name",
                max_length=20,
                unique=True,
                verbose_name="Hex Code",
            ),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "quantity",
                    models.PositiveSmallIntegerField(
                        help_text="This holds the quantity of the order item that was placed",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="This holds the unit price of the order item that was placed",
                        max_digits=6,
                        verbose_name="Unit Price",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        help_text="This holds the size of the item that was orderd",
                        max_length=20,
                        null=True,
                        verbose_name="Size",
                    ),
                ),
                (
                    "colour",
                    models.CharField(
                        help_text="This holds the name of the colour",
                        max_length=20,
                        null=True,
                        verbose_name="Colour",
                    ),
                ),
                (
                    "ordered",
                    models.BooleanField(
                        default=False,
                        help_text="This holds the action of the the order that was placed",
                        verbose_name="Orderd",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="This holds the the details of the customer that placed the order item",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="core.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="This holds the the details of the order that was placed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="store.order",
                        verbose_name="Orders",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="This holds the details of the product that was ordered",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orderitems",
                        to="store.product",
                        verbose_name="Product Details",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_date",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "size",
                    models.CharField(
                        help_text="This holds the size of the product or item in the cart",
                        max_length=20,
                        null=True,
                        verbose_name="Size",
                    ),
                ),
                (
                    "colour",
                    models.CharField(
                        help_text="This holds the name of the colour",
                        max_length=20,
                        null=True,
                        verbose_name="Colour Name",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveSmallIntegerField(
                        help_text="This holds the name of the colour",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Colour Name",
                    ),
                ),
                (
                    "extra_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="This holds the extra price of the cart item",
                        max_digits=6,
                        null=True,
                        verbose_name="Extra Price",
                    ),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        help_text="This holds the the cart item details",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="store.cart",
                        verbose_name="Cart Item",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="This holds the details of the product in the cart",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.product",
                        verbose_name="Product Details",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_date",),
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="address",
            name="country",
            field=models.ForeignKey(
                help_text="This holds the country details the customer address",
                on_delete=django.db.models.deletion.CASCADE,
                to="store.country",
                verbose_name="Country",
            ),
        ),
        migrations.AddField(
            model_name="address",
            name="customer",
            field=models.ForeignKey(
                help_text="This holds the customer details",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="addresses",
                to="core.customer",
                verbose_name="Customer",
            ),
        ),
    ]
